@page "/login"
@using SkillPortal.Models.Dto
@using SkillPortal.Services
@using SkillPortal.Services.Interfaces
@inject IUserService userService
@inject AuthenticationStateProvider authStateProvider
@inject NavigationManager navManager
@inject IJSRuntime js

<PageTitle>Login</PageTitle>

<div class="row">
    <div class="col-lg-4 offset-lg-4 pt-4 pb-4 border">
        <div class="mb-3 text-center">
            <h3>LOGIN</h3>
        </div>
        <div class="mb-3">
            <label>Email</label>
            <input @bind="model.Email" class="form-control" placeholder="Email" />
        </div>
        <div class="mb-3">
            <label>Password</label>
            <input @bind="model.Password" type="password" class="form-control" placeholder="Password" />
        </div>
        <div class="mb-3 d-grid gap-2">
            <button @onclick="LoginUser" class="btn btn-primary">Login</button>
        </div>
    </div>
</div>

@code {
    private LoginModel model = new LoginModel();

    private async Task LoginUser()
    {
        var userAccount = userService.GetUserByEmail(model.Email);
        if (userAccount == null || userAccount.Password != model.Password)
        {
            await js.InvokeVoidAsync("alert", "Invalid User Name or Password");
            return;
        }

        var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
        await customAuthStateProvider.UpdateAuthenticationState(new UserSession
            {
                Email = model.Email,
                Role = userAccount.Role
            });
        navManager.NavigateTo("/", true);
    }
}